package automation.PestRoutes.Controller.Reporting.Office;

import automation.PestRoutes.Controller.CustomerCreation.CreateNewCustomer;
import automation.PestRoutes.PageObject.CustomerOverview.CustomerViewDialog_Header;
import automation.PestRoutes.PageObject.CustomerOverview.CustomerViewDialog_OverviewTab;
import automation.PestRoutes.PageObject.CustomerOverview.Invoicing.CreditMemoTab;
import automation.PestRoutes.PageObject.CustomerOverview.Invoicing.InvoiceImplementation;
import automation.PestRoutes.PageObject.Header;
import automation.PestRoutes.PageObject.ReportingPage.OfficePage.BillingByServiceTypeTab;
import automation.PestRoutes.PageObject.ReportingPage.OfficePage.PaymentsByServiceTypeTab;
import automation.PestRoutes.Utilities.AppData;
import automation.PestRoutes.Utilities.AssertException;
import automation.PestRoutes.Utilities.CucumberBaseClass;
import automation.PestRoutes.Utilities.Utilities;
import io.cucumber.java.en.And;
import io.cucumber.java.en.Then;
import org.openqa.selenium.StaleElementReferenceException;
import org.testng.annotations.Test;

import java.io.IOException;

import static automation.PestRoutes.Utilities.AssertException.result;

public class PaymentsByServiceType extends AppData {

    PaymentsByServiceTypeTab paymentsByServiceTypeTab = new PaymentsByServiceTypeTab();
    BillingByServiceTypeTab billingByServiceTypeTab = new BillingByServiceTypeTab();
    InvoiceImplementation invImplementation;
    CustomerViewDialog_Header customerCardHeader;
    Header header;
    CreateNewCustomer createNewCustomer;
    CreditMemoTab creditMemoTab;
    CustomerViewDialog_OverviewTab customerViewDialog_overviewTab;

    private String subTotalValue = "";
    private String taxValue = "";
    private String totalCollected = "";
    private String dateOfInvoice = "";
    private String customerID_PST = "";
    private String customerName_PST = "";

    //Author: Aditya
    @Test
    @Then("I validate if all fields are displaying and are enabled in Payments by service type")
    public void validateAllFieldsEnabled() {
        billingByServiceTypeTab.clickAdvancedFilters();
        String[] fields = {billingByServiceTypeTab.dateParams, billingByServiceTypeTab.groupBy, billingByServiceTypeTab.subGroupOne,
                billingByServiceTypeTab.subGroupTwo, billingByServiceTypeTab.asOfDate, paymentsByServiceTypeTab.Coupons, billingByServiceTypeTab.writeOffs,
                billingByServiceTypeTab.aPayType_bbst, billingByServiceTypeTab.aPayStatus_bbst, billingByServiceTypeTab.propType_bbst,
                billingByServiceTypeTab.balance_bbst, billingByServiceTypeTab.balanceAge_bbst, billingByServiceTypeTab.soldDateRange,
                billingByServiceTypeTab.search_bbst,
                billingByServiceTypeTab.filterTypes_BST("invoice_bbst"),
                billingByServiceTypeTab.filterTypes_BST("serviceType_bbst"),
                billingByServiceTypeTab.filterTypes_BST("customerSource_bbst"),
                billingByServiceTypeTab.filterTypes_BST("inclCollections"),
                billingByServiceTypeTab.filterTypes_BST("subSource_bbst"),
                billingByServiceTypeTab.filterTypes_BST("regions_bbst"),
                billingByServiceTypeTab.filterTypes_BST("divisions_bbst"),
                billingByServiceTypeTab.filterTypes_BST("offices_bbst"),
                billingByServiceTypeTab.filterTypes_BST("includeFlags_bbst"),
                billingByServiceTypeTab.filterTypes_BST("excludeFlags_bbst"),
                billingByServiceTypeTab.filterTypes_BST("scheduledBy_bbst"),
                billingByServiceTypeTab.filterTypes_BST("soldByTeam_bbst"),
                billingByServiceTypeTab.filterTypes_BST("soldbySalesRep_bbst")};

        billingByServiceTypeTab.click(billingByServiceTypeTab.refresh_bbst);

        AssertException.validateFieldEnabled(fields);
    }

    //Author: Aditya
    @And("I validate the fields generated by payments by service type report")
    public void validateFields_PaymentServiceReport() {
        String[] fields;
        fields = new String[]{paymentsByServiceTypeTab.filterTypes_PST("description_pstReport"),
                paymentsByServiceTypeTab.filterTypes_PST("appliedPaymentsBeforeTax_pstReport"),
                paymentsByServiceTypeTab.filterTypes_PST("tax_pstReport"),
                paymentsByServiceTypeTab.filterTypes_PST("coupons_pstReport"),
                paymentsByServiceTypeTab.filterTypes_PST("cash_pstReport"),
                paymentsByServiceTypeTab.filterTypes_PST("check_pstReport"),
                paymentsByServiceTypeTab.filterTypes_PST("cardType_pstReport"),
                paymentsByServiceTypeTab.filterTypes_PST("amexCard_pstReport"),
                paymentsByServiceTypeTab.filterTypes_PST("ACH_pstReport"),
                paymentsByServiceTypeTab.filterTypes_PST("totalCollected_pstReport")};
        AssertException.validateFieldEnabled(fields);
    }

    //Author: Aditya
    @And("I validate data generated from payments by service type report")
    public void validateDataInPaymentsReport() throws InterruptedException {
        invImplementation = new InvoiceImplementation();
        customerCardHeader = new CustomerViewDialog_Header();
        creditMemoTab = new CreditMemoTab();
        header = new Header();
        createNewCustomer = new CreateNewCustomer();
        customerViewDialog_overviewTab = new CustomerViewDialog_OverviewTab();
        customerName_PST = createNewCustomer.getCustomerFullName();
        customerID_PST = customerViewDialog_overviewTab.getCustomerIDFromHeader();
        header.searchCustomerWithName(customerName_PST);
        customerCardHeader.navigateTo(customerCardHeader.invoicesTabInDialog);
        invImplementation.clickInitialInvoice();
        subTotalValue = invImplementation.getSubTotalValue();
        taxValue = invImplementation.getTaxValue();
        totalCollected = billingByServiceTypeTab.get(invImplementation.paymentsInPayments);
        if (CucumberBaseClass.scenarioName().equals("Balance Age validation PST with StandAlone Invoices")) {
            subTotalValue = "$" + "" + String.valueOf(String.format("%.2f",Double.parseDouble(subTotalValue.substring(1))/10));
            taxValue = "$" + "" + String.valueOf(String.format("%.2f",Double.parseDouble(taxValue.substring(1)) / 10));
        }
        result(totalCollected, billingByServiceTypeTab.get(paymentsByServiceTypeTab.totalCollected_Report), "Total Collected in the report", "PST Report Validation");
        result(billingByServiceTypeTab.get(paymentsByServiceTypeTab.totalCollected_Report), billingByServiceTypeTab.get(paymentsByServiceTypeTab.totalCollected_VisaMasterEtc_Report), "Total Collected in the report", "PST Report Validation");
        result(billingByServiceTypeTab.get(paymentsByServiceTypeTab.appliedPaymentBeforeTax_Report), subTotalValue, "Sub Total Value Validation in report",
                "PST Report Validation");
        result(billingByServiceTypeTab.get(paymentsByServiceTypeTab.tax_Report), taxValue, "Tax Value Validation in report",
                "PST Report Validation");

    }

    //Author: Aditya
    @And("I validate line item data in Payments by service type report")
    public void validateLineItemValues_PaymentReport() throws IOException {
        result(totalCollected, billingByServiceTypeTab.get(paymentsByServiceTypeTab.totalCollected_Customer), "Total Collected in the detail report", "PST Report Validation");
        result(billingByServiceTypeTab.get(paymentsByServiceTypeTab.tax_Customer), taxValue, "Tax Value Validation in detailed report",
                "PST Report Validation");
        result(billingByServiceTypeTab.get(paymentsByServiceTypeTab.appliedPaymentBeforeTax_Report), billingByServiceTypeTab.get(paymentsByServiceTypeTab.appliedPaymentBeforeTax_Customer), "Applied Payment Validation in detail report",
                "PST Report Validation");
        dateOfInvoice = (billingByServiceTypeTab.get(paymentsByServiceTypeTab.invoiceDate_lineItem)).substring(0, 8);
        result(Utilities.currentDate("MM/dd/YY"), dateOfInvoice, "Invoice Date Validation", "PST Report Validation");
        result("Credit Card", billingByServiceTypeTab.get(paymentsByServiceTypeTab.paymentMethod), "Invoice ID validation in detail report", "PST Report Validation");
        result(billingByServiceTypeTab.getAttributeValue(invImplementation.activeInvoiceOnTheLeft, "ticketid"), billingByServiceTypeTab.get(paymentsByServiceTypeTab.invoiceID_lineItem), "Invoice ID validation in detail report", "PST Report Validation");
        result(getData("serviceDescription", generalData), billingByServiceTypeTab.get(billingByServiceTypeTab.serviceType_lineItem), "Service Type in detail report validation", "PST Report Validation");
        result(customerID_PST, billingByServiceTypeTab.get(billingByServiceTypeTab.customerID_lineItem), "Customer ID Validation", "BBST Report Validation");
        result(customerName_PST, billingByServiceTypeTab.get(billingByServiceTypeTab.customerName_lineItem), "Customer Name Validation", "BBST Report Validation");
    }

    //Author: Aditya
    @And("I validate the fields are displayed in individual line items in Payment by Service Type")
    public void validateFields_PSTLineItem() throws InterruptedException {
        createNewCustomer = new CreateNewCustomer();
        header = new Header();

        try {
            String[] fields = {billingByServiceTypeTab.search_lineItem,
                    billingByServiceTypeTab.pageNumber_lineItem,
                    billingByServiceTypeTab.filterTypes_BST("customerID_lineItem"),
                    billingByServiceTypeTab.filterTypes_BST("customerName_lineItem"),
                    billingByServiceTypeTab.filterTypes_BST("billedServices_lineItem"),
                    billingByServiceTypeTab.filterTypes_BST("tax_lineItem"),
                    paymentsByServiceTypeTab.filterTypes_PST("paymentDate_lineItem"),
                    paymentsByServiceTypeTab.filterTypes_PST("paymentMethod_lineItem"),
                    paymentsByServiceTypeTab.filterTypes_PST("serviceType_lineItem"),
                    paymentsByServiceTypeTab.filterTypes_PST("invoiceID_lineItem"),
                    paymentsByServiceTypeTab.filterTypes_PST("totalPayment_lineItem"),
                    billingByServiceTypeTab.filterTypes_BST("first_page"),
                    billingByServiceTypeTab.filterTypes_BST("previous_page"),
                    billingByServiceTypeTab.filterTypes_BST("next_page"),
                    billingByServiceTypeTab.filterTypes_BST("last_page"),
                    billingByServiceTypeTab.exportDetailsToCSV_button};
            AssertException.validateFieldEnabled(fields);
        } catch (StaleElementReferenceException e) {
            System.out.println(e);
        } finally {
            if (!CucumberBaseClass.scenarioName().equals("Multi Group By filter validation in PST")) {
                header.clickAccessHistory();
            }
            createNewCustomer.removeCustomer();
        }
    }

}
